//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


// } Driver Code Ends
class Solution {
  public:
    // arr: input array
    // Function to find maximum circular subarray sum.
    int circularSubarraySum(vector<int> &arr) {
        int n = arr.size();
        int mini = INT_MAX;
        int maxi = INT_MIN;
        int sum1 = 0;
        int sum2 = 0;
        int total = 0;
        for(int i = 0; i < n; i++){
            total += arr[i];
            sum2 = min(arr[i] , sum2+arr[i]);
            mini = min(mini, sum2);
            sum1 = max(arr[i], sum1+arr[i]);
            maxi = max(maxi, sum1);
        }
        return max(maxi, total - mini);
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        string input;

        // Read first array
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }

        Solution ob;
        int res = ob.circularSubarraySum(arr);

        cout << res << endl;
    }
    return 0;
}

// } Driver Code Ends
