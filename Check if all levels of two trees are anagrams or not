class Solution{
    public:
    bool areAnagrams(Node *root1, Node *root2)
    {
        if(!root1 || !root2)
        return true;
        
        if(!root1 && !root2)
        return false;
        
        if(root1->data != root2->data)
        return false;
        
        queue<Node*>q1;
        queue<Node*>q2;
        
        q1.push(root1);
        q2.push(root2);
        
        while(!q1.empty() && !q2.empty())
        {
            
            int size1= q1.size();
            int size2= q2.size();
            vector<int>ans1;
            vector<int>ans2;
            
            if(size1 != size2)
            return false;
            
            while(size1--)
            {
                Node *temp1 = q1.front();
                Node *temp2 = q2.front();
                q1.pop();
                q2.pop();
                
                ans1.push_back(temp1->data);
                ans2.push_back(temp2->data);
                
                if(temp1->left)
                q1.push(temp1->left);
                if(temp1->right)
                q1.push(temp1->right);
                
                if(temp2->left)
                q2.push(temp2->left);
                if(temp2->right)
                q2.push(temp2->right);
                
            }
            
            if(ans1.size() != ans2.size())
            return false;
            
            sort(ans1.begin(), ans1.end());
            sort(ans2.begin(), ans2.end());
            
            for(int i = 0;i<ans1.size();i++)
            {
                if(ans1[i] != ans2[i])
                return false;
            }
        }
        
        return true;
    }
};
